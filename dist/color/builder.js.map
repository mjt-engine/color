{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../src/color/builder.ts"],"names":[],"mappings":"AACA,OAAO,QAAQ,MAAM,OAAO,CAAC;AAE7B,MAAM,UAAU,OAAO,CAAC,EACtB,KAAK,EACL,KAAK,GAAG,KAAK,GAId;IACC,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,IAAI,QAAQ,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;QAC1B,OAAO,KAAqB,CAAC;IAC/B,CAAC;IAED,QAAQ,KAAK,EAAE,CAAC;QACd,KAAK,KAAK,CAAC,CAAC,CAAC;YACX,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC;QACD,KAAK,KAAK,CAAC,CAAC,CAAC;YACX,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC;QACD,KAAK,MAAM,CAAC,CAAC,CAAC;YACZ,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,CAAC;QACD,KAAK,MAAM,CAAC,CAAC,CAAC;YACZ,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,CAAC,CAAC,CAAC;YACR,MAAM,IAAI,KAAK,CAAC,wBAAwB,KAAK,EAAE,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["import { ColorLike, ColorModel, ColorBuilder } from \"./ColorTypes\";\nimport QixColor from \"color\";\n\nexport function builder({\n  color,\n  model = \"hsl\",\n}: {\n  color?: ColorLike;\n  model?: ColorModel;\n}): ColorBuilder {\n  if (color === undefined) {\n    return new QixColor();\n  }\n\n  if (typeof color === \"string\") {\n    return new QixColor(color);\n  }\n\n  if (!Array.isArray(color)) {\n    return color as ColorBuilder;\n  }\n\n  switch (model) {\n    case \"rgb\": {\n      return QixColor.rgb(color[0], color[1], color[2]);\n    }\n    case \"hsl\": {\n      return QixColor.hsl(color[0], color[1], color[2]);\n    }\n    case \"hsla\": {\n      return QixColor.hsl(color[0], color[1], color[2]).alpha(color[3] ?? 1);\n    }\n    case \"rgba\": {\n      return QixColor.rgb(color[0], color[1], color[2]).alpha(color[3] ?? 1);\n    }\n    default: {\n      throw new Error(`Unknown color Model: ${model}`);\n    }\n  }\n}\n"]}